# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false


# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''
        - CONDA_DEPENDENCIES='Cython scipy scikit-image matplotlib'
        - CONDA_CHANNELS='astropy-ci-extras'
        - SETUP_XVFB=True
        - EVENT_TYPE='pull_request push'

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.3 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Try MacOS X
        - os: osx
          env: SETUP_CMD='test'

        # Do a coverage test in Python 2. Move coverage to 3.x once speed
        # issues have been solved; astropy/astropy#4826
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
               CONDA_DEPENDENCIES='Cython scipy scikit-image matplotlib jupyter'
        - os: linux
          env: SETUP_CMD='build_sphinx -w'
               CONDA_DEPENDENCIES='Cython scipy scikit-image matplotlib jupyter'
               EVENT_TYPE='pull_request push cron'

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7
               CONDA_DEPENDENCIES='Cython scipy scikit-image matplotlib qt=4'
        - os: linux
          env: PYTHON_VERSION=3.3 NUMPY_VERSION=1.8
        - os: linux
          env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.9
        - os: linux
          env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.10

        # Now try Astropy dev and LTS vesions with the latest 3.x and 2.7.
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'
        - os: linux
          env: ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=lts
        - os: linux
          env: ASTROPY_VERSION=lts

        # Try with optional dependencies disabled
        - os: linux
          env: PYTHON_VERSION=2.7 CONDA_DEPENDENCIES='Cython'
        - os: linux
          env: CONDA_DEPENDENCIES='Cython'

        # Try numpy pre-release
        - os: linux
          env: NUMPY_VERSION=prerelease
               EVENT_TYPE='pull_request push cron'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

script:
   - python setup.py $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then
          coveralls --rcfile='photutils/tests/coveragerc';
      fi
